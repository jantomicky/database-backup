#!/bin/bash

source_directory=$(dirname "${BASH_SOURCE[0]}")
my_cnf_path="$HOME/my.cnf"
configuration_file_path="$source_directory/database-backup.config"
ignore_databases="(^mysql|_schema|sys|information_schema|performance_schema$)"

function source_config {
    if [ ! -f "$configuration_file_path" ]; then
        echo "Missing configuration file ($configuration_file_path)"
        exit 1
    fi
    if ! grep -q "DATABASE_BACKUPS_PATH" "$configuration_file_path"; then
        echo "The configuration file does not contain the backups directory path"
        exit 1
    fi
    source "$configuration_file_path"
}

function backup_databases {
    timestamp=$(date +"%Y-%m-%d-%H%M")
    mkdir -p "$DATABASE_BACKUPS_PATH" && mysql --defaults-file="$my_cnf_path" -N -e "SHOW DATABASES WHERE \`Database\` NOT REGEXP '$ignore_databases'" | while read -r database; do mysqldump --defaults-file="$my_cnf_path" --no-tablespaces "$database" | gzip > "$DATABASE_BACKUPS_PATH/$database.$timestamp.sql.gz"; done
}

function cleanup {
    if [[ -z "${DATABASE_BACKUPS_KEEP_FOR_DAYS}" ]]; then
        echo "Skipping the cleanup of backups as the number of days for keeping them is not configured"
    else
        find "$DATABASE_BACKUPS_PATH" -type f -name "*.sql.gz" -mtime +"$DATABASE_BACKUPS_KEEP_FOR_DAYS" -delete
    fi
}

function secure {
    find "$DATABASE_BACKUPS_PATH" -type f -name "*.sql.gz" -exec chmod 0600 {} \;
}

source_config && backup_databases && cleanup && secure
